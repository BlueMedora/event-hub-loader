{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the EventHub namespace"
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "hubname",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 8,
      "metadata": {
        "description": "Amount of partitions"
      }
    },
    "consumerGroupName1": {
      "type": "string",
      "defaultValue": "group1",
      "metadata": {
        "description": "Name of the first Consumer Group"
      }
    },
    "consumerGroupName2": {
      "type": "string",
      "defaultValue": "group2",
      "metadata": {
        "description": "Name of the second Consumer Group"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "version": "2017-04-01",
    "managePolicyName": "manage"
  },
  "resources": [
    {
      "apiVersion": "[variables('version')]",
      "name": "[parameters('namespaceName')]",
      "type": "Microsoft.EventHub/namespaces",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "isAutoInflateEnabled": true,
        "maximumThroughputUnits": "[parameters('partitionCount')]"
      },
      "resources": [
        {
          "apiVersion": "[variables('version')]",
          "name": "[parameters('eventHubName')]",
          "type": "eventhubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'))]"
          ],
          "properties": {
            "path": "[parameters('eventHubName')]",
            "partitionCount": "[parameters('partitionCount')]"
          },
          "resources": [
            {
              "apiVersion": "[variables('version')]",
              "name": "[parameters('consumerGroupName1')]",
              "type": "consumergroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ],
              "properties": {}
            },
            {
              "apiVersion": "[variables('version')]",
              "name": "[parameters('consumerGroupName2')]",
              "type": "consumergroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ],
              "properties": {}
            },
            {
              "apiVersion": "[variables('version')]",
              "name": "manage",
              "type": "authorizationRules",
              "dependsOn": [
                "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'),'/eventhubs/',parameters('eventHubName'))]",
                "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'),'/eventhubs/',parameters('eventHubName'), '/consumerGroups/', parameters('consumerGroupName1'))]",
                "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'),'/eventhubs/',parameters('eventHubName'), '/consumerGroups/', parameters('consumerGroupName2'))]"
              ],
              "properties": {
                "rights": [
                  "Send",
                  "Listen",
                  "Manage"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "outputs": {
    "ConnectionString": {
      "type": "string",
      "value": "[listKeys(concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'), '/eventhubs/', parameters('eventHubName'), '/authorizationRules/', variables('managePolicyName')), variables('version')).primaryConnectionString]"
    }
  }
}